'********************************************************************************************
' Description:
'   This macro reads configuration data from a sheet named "SFTP". The "SFTP" sheet should
'   have headers in row 1 with the following columns:
'       A: Client Name
'       B: Data Sheet Name
'       C: New File Name (without extension)
'       D: File Path (where the CSV file will be saved)
'
'   For each row in the SFTP sheet (starting from row 2), the macro performs the following:
'       1. Reads the client name, data sheet name, new file name, and file path.
'       2. Retrieves a date value from the "MasterSheet" in cell B2. This date is then
'          formatted in two ways:
'            - "yyyymmdd" for prefixing the file name.
'            - "dd-mmmm-yy" for adding as a new column ("Statement Date") in every row.
'       3. Opens the specified data sheet and assumes its header is in row 1.
'       4. Finds the column positions for the following headers in the data sheet:
'          "Client", "Cusip_ISIN", "Security_Name", "Valuation_Type", and "Price".
'       5. Loops through the data sheet rows (starting from row 2) and selects only the rows
'          where the "Client" column matches the client name from the SFTP sheet.
'       6. Copies the matching rows (only the specified columns) into a new workbook.
'           - An extra column ("Statement Date") is added to every row, containing the
'             date from MasterSheet!B2 formatted as "dd-mmmm-yy".
'       7. Saves the new workbook as a CSV file using the file path and a file name that is
'          prefixed with the date in "yyyymmdd" format (e.g., "20250313_Filename.csv").
'
'   This macro is useful for filtering and exporting data for individual clients based on a
'   configuration provided on the "SFTP" sheet.
'
' How It Works:
'   - The macro defines the SFTP sheet’s used range (columns A–D) with headers defined in row 1.
'   - It retrieves the date from "MasterSheet" cell B2 and formats it as "yyyymmdd" (for the file name)
'     and as "dd-mmmm-yy" (for the new Statement Date column).
'   - For each configuration row (starting at row 2), it retrieves export settings and accesses 
'     the corresponding data sheet.
'   - It identifies required columns by matching header names.
'   - It then filters the data sheet by the specified client and copies the desired columns to
'     a new workbook.
'   - Finally, it saves the new workbook as a CSV file with the date prefixed to the file name,
'     ensuring that the file path ends with a backslash.
'********************************************************************************************

Sub ExportFilteredDataToCSV()
    Dim wsSFTP As Worksheet
    Dim rngSFTP As Range
    Dim i As Long, j As Long
    Dim clientName As String, dataSheetName As String, newFileName As String, filePath As String
    Dim dataWs As Worksheet
    Dim wbNew As Workbook
    Dim fullPath As String
    Dim headerRow As Range
    Dim lastRow As Long, lastCol As Long
    Dim colClient As Long, colCusip As Long, colSecurity As Long, colValuation As Long, colPrice As Long
    Dim outputRow As Long
    Dim sftpLastRow As Long
    Dim datePrefix As String, dateStmt As String
    
    ' Retrieve the date from "MasterSheet" cell B2 and format it:
    ' - datePrefix: "yyyymmdd" (for file naming)
    ' - dateStmt: "dd-mmmm-yy" (for the new column in every row)
    On Error Resume Next
    datePrefix = Format(ThisWorkbook.Sheets("MasterSheet").Range("B2").Value, "yyyymmdd")
    dateStmt = Format(ThisWorkbook.Sheets("MasterSheet").Range("B2").Value, "dd-mmmm-yy")
    On Error GoTo 0
    If datePrefix = "" Then
        MsgBox "Could not retrieve or format the date from MasterSheet!B2.", vbExclamation
        Exit Sub
    End If
    
    ' Set the SFTP sheet and define its used range (assuming columns A:D with headers in row 1)
    Set wsSFTP = ThisWorkbook.Sheets("SFTP")
    sftpLastRow = wsSFTP.Cells(wsSFTP.Rows.Count, 1).End(xlUp).Row
    Set rngSFTP = wsSFTP.Range("A1:D" & sftpLastRow)
    
    ' Loop through each row in the SFTP used range (starting from row 2)
    For i = 2 To rngSFTP.Rows.Count
        ' Read values from the SFTP sheet row
        clientName = Trim(rngSFTP.Cells(i, 1).Value)
        dataSheetName = rngSFTP.Cells(i, 2).Value
        newFileName = rngSFTP.Cells(i, 3).Value
        filePath = rngSFTP.Cells(i, 4).Value
        
        ' Ensure the file path ends with a backslash
        If Right(filePath, 1) <> "\" Then
            filePath = filePath & "\"
        End If
        
        ' Attempt to set the data worksheet based on the provided name
        On Error Resume Next
        Set dataWs = ThisWorkbook.Sheets(dataSheetName)
        On Error GoTo 0
        If dataWs Is Nothing Then
            MsgBox "Data sheet '" & dataSheetName & "' not found for client: " & clientName, vbExclamation
        Else
            ' Assume row 1 of the data sheet contains headers
            Set headerRow = dataWs.Rows(1)
            lastCol = dataWs.Cells(1, dataWs.Columns.Count).End(xlToLeft).Column
            
            ' Initialize column indices
            colClient = 0: colCusip = 0: colSecurity = 0: colValuation = 0: colPrice = 0
            
            ' Find the columns by header name (case-sensitive)
            For j = 1 To lastCol
                Select Case Trim(headerRow.Cells(1, j).Value)
                    Case "Client"
                        colClient = j
                    Case "Cusip_ISIN"
                        colCusip = j
                    Case "Security_Name"
                        colSecurity = j
                    Case "Valuation_Type"
                        colValuation = j
                    Case "Price"
                        colPrice = j
                End Select
            Next j
            
            ' Ensure all required columns were found
            If colClient = 0 Or colCusip = 0 Or colSecurity = 0 Or colValuation = 0 Or colPrice = 0 Then
                MsgBox "One or more required columns (Client, Cusip_ISIN, Security_Name, Valuation_Type, Price) not found in sheet '" & dataSheetName & "'.", vbExclamation
            Else
                ' Create a new workbook for exporting data
                Set wbNew = Workbooks.Add
                
                ' Write header row in the new workbook, adding a new column for Statement Date
                With wbNew.Sheets(1)
                    .Cells(1, 1).Value = "Client"
                    .Cells(1, 2).Value = "Cusip_ISIN"
                    .Cells(1, 3).Value = "Security_Name"
                    .Cells(1, 4).Value = "Valuation_Type"
                    .Cells(1, 5).Value = "Price"
                    .Cells(1, 6).Value = "Statement Date"
                End With
                
                outputRow = 2 ' Start writing from row 2 in the new workbook
                
                ' Determine the last used row in the data sheet based on the Client column
                lastRow = dataWs.Cells(dataWs.Rows.Count, colClient).End(xlUp).Row
                
                ' Loop through the data sheet rows (starting from row 2)
                For j = 2 To lastRow
                    If Trim(dataWs.Cells(j, colClient).Value) = clientName Then
                        With wbNew.Sheets(1)
                            .Cells(outputRow, 1).Value = dataWs.Cells(j, colClient).Value
                            .Cells(outputRow, 2).Value = dataWs.Cells(j, colCusip).Value
                            .Cells(outputRow, 3).Value = dataWs.Cells(j, colSecurity).Value
                            .Cells(outputRow, 4).Value = dataWs.Cells(j, colValuation).Value
                            .Cells(outputRow, 5).Value = dataWs.Cells(j, colPrice).Value
                            .Cells(outputRow, 6).Value = dateStmt  ' Add the Statement Date
                        End With
                        outputRow = outputRow + 1
                    End If
                Next j
                
                ' Build the full file path: date prefix comes first, then an underscore, then the new file name
                fullPath = filePath & "\" & datePrefix & "_" & newFileName & ".csv"
                
                ' (Optional) Print the full file path to the Immediate Window for debugging
                Debug.Print "Saving file as: " & fullPath
                
                ' Save the new workbook as a CSV file
                Application.DisplayAlerts = False
                wbNew.SaveAs Filename:=fullPath, FileFormat:=xlCSV, CreateBackup:=False
                Application.DisplayAlerts = True
                
                ' Close the new workbook without further changes
                wbNew.Close SaveChanges:=False
            End If
        End If
        
        ' Reset the data worksheet reference for the next iteration
        Set dataWs = Nothing
    Next i
    
    MsgBox "Export complete!", vbInformation
End Sub
